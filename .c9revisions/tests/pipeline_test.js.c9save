{"ts":1358891158146,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"\"use strict\";\nrequire(\"./support/paths\");\n\nvar assert = require(\"assert\");\n//var module = require(\"./module\");\n\nmodule.exports = {\n\n    \"test untitled 1\" : function() {\n        //assert.equal(!true, false);\n    }\n\n};\n\nif (typeof module !== \"undefined\" && module === require.main) {\n    require(\"asyncjs\").test.testcase(module.exports).exec()\n}"]],"start1":0,"start2":0,"length1":0,"length2":343}]],"length":343}
{"contributors":[],"silentsave":false,"ts":1358891219480,"patch":[[{"diffs":[[0,"e(\"."],[1,"."],[0,"/s"],[-1,"upport/paths"],[1,"rc/pipeline"],[0,"\");\n"]],"start1":20,"start2":20,"length1":22,"length2":22}]],"length":343,"saved":false}
{"ts":1358891325564,"patch":[[{"diffs":[[0,"../s"],[-1,"rc/pipeline"],[1,"upport/paths"],[0,"\");\n"]],"start1":23,"start2":23,"length1":19,"length2":20}]],"length":344,"saved":false}
{"ts":1358891431384,"patch":[[{"diffs":[[0,"ct\";"],[-1,"\nrequire(\"../support/paths\");\n"],[1,"\r"],[0,"\nvar"]],"start1":9,"start2":9,"length1":38,"length2":9},{"diffs":[[0,"t\");"],[-1,"\n//"],[1," \r\n"],[0,"var "],[-1,"m"],[1,"M"],[0,"odul"]],"start1":42,"start2":42,"length1":16,"length2":16},{"diffs":[[0,"odule\");"],[-1,"\n"],[1," \r\n\r"],[0,"\nmodule."]],"start1":74,"start2":74,"length1":17,"length2":20},{"diffs":[[0,"orts = {"],[-1,"\n"],[1," \r\n\r"],[0,"\n    \"te"]],"start1":97,"start2":97,"length1":17,"length2":20},{"diffs":[[0,"est "],[1,"testF"],[0,"un"],[1,"c"],[0,"ti"],[-1,"tled 1"],[1,"on"],[0,"\" : "]],"start1":116,"start2":116,"length1":18,"length2":20},{"diffs":[[0,"tion() {"],[1," \r"],[0,"\n       "]],"start1":140,"start2":140,"length1":16,"length2":18},{"diffs":[[0,"    "],[-1,"//assert.equal(!true, false);"],[1,"var module = new Module(); \r\n        assert.equal(module.testFunction(), \"hi\"); \r"],[0,"\n    }"],[-1,"\n\n};\n"],[1," \r\n}; \r\n\r"],[0,"\nif "]],"start1":155,"start2":155,"length1":48,"length2":104},{"diffs":[[0,".main) {"],[1," \r"],[0,"\n    req"]],"start1":311,"start2":311,"length1":16,"length2":18},{"diffs":[[0,").exec()"],[1,"; \r"],[0,"\n}"]],"start1":373,"start2":373,"length1":10,"length2":13}]],"length":386,"saved":false}
{"ts":1358891475598,"patch":[[{"diffs":[[0,"); \r"],[-1,"\nvar Module = require(\"./module\"); \r"],[0,"\n\r\nm"]],"start1":44,"start2":44,"length1":44,"length2":8},{"diffs":[[0,"est test"],[-1,"Function"],[1,"1"],[0,"\" : func"]],"start1":80,"start2":80,"length1":24,"length2":17},{"diffs":[[0,"    "],[-1,"var module = new Module(); \r\n        assert.equal(module.testFunction(), \"hi\""],[1,"assert.equal(!true, false, 'Does not equal'"],[0,");"],[-1," "],[0,"\r\n  "]],"start1":112,"start2":112,"length1":88,"length2":53}]],"length":308,"saved":false}
{"ts":1358892097429,"patch":[[{"diffs":[[0,"t\";\r"],[-1,"\nvar assert = require(\"assert\"); \r"],[0,"\n\r\nm"]],"start1":10,"start2":10,"length1":42,"length2":8},{"diffs":[[0,"unction("],[1,"test"],[0,") { \r\n  "]],"start1":60,"start2":60,"length1":16,"length2":20},{"diffs":[[0,"    "],[-1,"asser"],[1,"tes"],[0,"t.eq"]],"start1":82,"start2":82,"length1":13,"length2":11},{"diffs":[[0,"e, '"],[-1,"Does not equal');\r\n    } \r\n}; \r\n\r\nif (typeof module !== \"undefined\" && module === require.main) { \r\n    require(\"asyncjs\").test.testcase(module.exports).exec();"],[1,"test');\r\n        test.done();\r\n    }"],[0," \r\n}"],[1,"; "]],"start1":108,"start2":108,"length1":168,"length2":46}]],"length":154,"saved":false}
{"ts":1358892479175,"patch":[[{"diffs":[[0,"trict\";\r"],[1,"\nvar assert = require(\"assert\"); \r"],[0,"\n\r\nmodul"]],"start1":6,"start2":6,"length1":16,"length2":50},{"diffs":[[0,"unction("],[-1,"test"],[0,") { \r\n  "]],"start1":94,"start2":94,"length1":20,"length2":16},{"diffs":[[0,"        "],[-1,"tes"],[1,"asser"],[0,"t.equal("]],"start1":108,"start2":108,"length1":19,"length2":21},{"diffs":[[0,"e, '"],[-1,"test');\r\n        test.done();\r\n    } "],[1,"Does not equal');\r\n    } \r\n}; \r\n\r\nif (typeof module !== \"undefined\" && module === require.main) { \r\n    require('nodeunit').reporters.default.run(module.exports);"],[0,"\r\n}"],[-1,"; "]],"start1":140,"start2":140,"length1":46,"length2":169}]],"length":309,"saved":false}
{"ts":1358892548451,"patch":[[{"diffs":[[0,"unction("],[1,"test"],[0,") { \r\n  "]],"start1":94,"start2":94,"length1":16,"length2":20},{"diffs":[[0,"    "],[-1,"assert.equal(!true, false, 'Does not equal'"],[1,"test.expect(1);\r\n        test.done("],[0,");\r\n"]],"start1":116,"start2":116,"length1":51,"length2":43}]],"length":305,"saved":false}
{"ts":1358892573773,"patch":[[{"diffs":[[0,"st.e"],[-1,"xpect(1"],[1,"qual(!true, false, 'test'"],[0,");\r\n"]],"start1":122,"start2":122,"length1":15,"length2":33}]],"length":323,"saved":false}
{"ts":1358892628140,"patch":[[{"diffs":[[0,"ult.run("],[-1,"module.exports"],[0,");\r\n}"]],"start1":296,"start2":296,"length1":27,"length2":13}]],"length":309,"saved":false}
{"ts":1358892643490,"patch":[[{"diffs":[[0,"ult.run("],[1,"['pipeline']"],[0,");\r\n}"]],"start1":296,"start2":296,"length1":13,"length2":25}]],"length":321,"saved":false}
{"ts":1358892672434,"patch":[[{"diffs":[[0,"n(['"],[-1,"pipeline"],[1,"test"],[0,"']);"]],"start1":302,"start2":302,"length1":16,"length2":12}]],"length":317,"saved":false}
{"ts":1358892740589,"patch":[[{"diffs":[[0,".main) {"],[-1," "],[1,"\r\n    process.chdir('tests');"],[0,"\r\n    re"]],"start1":247,"start2":247,"length1":17,"length2":45},{"diffs":[[0,"t.run(['"],[-1,"test"],[1,"pipeline"],[0,"']);\r\n}"]],"start1":326,"start2":326,"length1":19,"length2":23}]],"length":349,"saved":false}
{"ts":1358892764135,"patch":[[{"diffs":[[0,"pipeline"],[1,".js"],[0,"']);\r\n}"]],"start1":334,"start2":334,"length1":15,"length2":18}]],"length":352,"saved":false}
{"ts":1358892799810,"patch":[[{"diffs":[[0,"n(['"],[-1,"pipeline"],[1,"*"],[0,".js'"]],"start1":330,"start2":330,"length1":16,"length2":9}]],"length":345,"saved":false}
{"ts":1358892848523,"patch":[[{"diffs":[[0,"n(['"],[-1,"*"],[1,"pipeline"],[0,".js'"]],"start1":330,"start2":330,"length1":9,"length2":16}]],"length":352,"saved":false}
{"contributors":[],"silentsave":false,"ts":1358892897995,"patch":[[{"diffs":[[0,"pipeline"],[1,"_test"],[0,".js']);\r"]],"start1":334,"start2":334,"length1":16,"length2":21}]],"length":357,"saved":false}
{"contributors":[],"silentsave":false,"ts":1358893350971,"patch":[[{"diffs":[[0,"ert\"); \r"],[1,"\nrequire('../src/pipeline.js');\r"],[0,"\n\r\nmodul"]],"start1":40,"start2":40,"length1":16,"length2":48},{"diffs":[[0,"est "],[-1,"test1"],[1,"start actions"],[0,"\" : "]],"start1":112,"start2":112,"length1":13,"length2":21},{"diffs":[[0,"st.e"],[-1,"qual(!true, false, 'test"],[1,"xpect(1);\r\n        \r\n        var pipeline = Pipeline().start(function() {\r\n            test.ok(true, 'did run start function"],[0,"');\r"]],"start1":162,"start2":162,"length1":32,"length2":132},{"diffs":[[0,");\r\n        "],[1,"   "],[1," "],[0,"test.done();"]],"start1":291,"start2":291,"length1":24,"length2":28},{"diffs":[[0,"st.done();\r\n"],[1,"        }).create();\r\n        pipeline({});\r\n"],[0,"    } \r\n}; \r"]],"start1":309,"start2":309,"length1":24,"length2":69}]],"length":546,"saved":false}
{"ts":1358893511744,"patch":[[{"diffs":[[0,"rt\"); \r\n"],[1,"var Pipeline = "],[0,"require("]],"start1":41,"start2":41,"length1":16,"length2":31}]],"length":561,"saved":false}
{"ts":1358893753838,"patch":[[{"diffs":[[0,"    "],[-1,"    test.done();"],[1,"}).startAsync(function(cb) {\r\n            test.ok(true, 'did run start function nr 2');\r\n            window.setTimeout(function() {\r\n                cb();\r\n            }, 10);\r\n        }).start(function() {\r\n           test.ok(true, 'did run start function nr 3'); "],[0,"\r\n  "]],"start1":314,"start2":314,"length1":24,"length2":273}]],"length":810,"saved":false}
{"ts":1358893779347,"patch":[[{"diffs":[[0,".expect("],[-1,"1"],[1,"3"],[0,");\r\n    "]],"start1":179,"start2":179,"length1":17,"length2":17}]],"length":810,"saved":false}
{"ts":1358893822861,"patch":[[{"diffs":[[0,"    "],[-1,"window."],[0,"setT"]],"start1":415,"start2":415,"length1":15,"length2":8}]],"length":803,"saved":false}
{"ts":1358893862981,"patch":[[{"diffs":[[0," nr 3');"],[-1," "],[1,"\r\n           test.done();"],[0,"\r\n      "]],"start1":567,"start2":567,"length1":17,"length2":41}]],"length":827,"saved":false}
{"ts":1358893998411,"patch":[[{"diffs":[[0,"\r\n\r\n    "],[-1,"\""],[1,"'"],[0,"test sta"]],"start1":117,"start2":117,"length1":17,"length2":17},{"diffs":[[0," actions"],[-1,"\""],[1,"'"],[0," : funct"]],"start1":136,"start2":136,"length1":17,"length2":17},{"diffs":[[0,"expect(3);\r\n"],[1,"        var number = 0;\r\n"],[0,"        \r\n  "]],"start1":180,"start2":180,"length1":24,"length2":49},{"diffs":[[0,"t(function() {\r\n"],[1,"            test.equal(number++, 0, 'did not run first');\r\n        }).startAsync(function(cb) {\r\n            test.equal(number++, 1, 'did not run second');\r\n            setTimeout(function() {\r\n                cb();\r\n            }, 10);\r\n        }).start(function() {\r\n           test.equal(number++, 2, 'did not run third');\r\n           test.done();\r\n        }).create();\r\n        pipeline({});\r\n    },\r\n    \r\n    'test stop actions': function(test) {\r\n        test.expect(3);\r\n        var pipeline = Pipeline().stop(function() {\r\n"],[0,"            test"]],"start1":265,"start2":265,"length1":32,"length2":564},{"diffs":[[0,";\r\n        }).st"],[-1,"art"],[1,"op"],[0,"Async(function(c"]],"start1":864,"start2":864,"length1":35,"length2":34},{"diffs":[[0,";\r\n        }).st"],[-1,"art"],[1,"op"],[0,"(function() {\r\n "]],"start1":1041,"start2":1041,"length1":35,"length2":34},{"diffs":[[0,";\r\n    }"],[-1," "],[0,""],[1,""],[0,"\r\n}; \r\n\r"]],"start1":1199,"start2":1199,"length1":17,"length2":16}]],"length":1381,"saved":false}
{"ts":1358894034820,"patch":[[{"diffs":[[0,"est.expect(3);\r\n"],[1,"        var number = 0;\r\n        \r\n"],[0,"        var pipe"]],"start1":744,"start2":744,"length1":32,"length2":67},{"diffs":[[0,"est."],[-1,"ok(true, 'did run start function"],[1,"equal(number++, 0, 'did not run first"],[0,"');\r"]],"start1":861,"start2":861,"length1":40,"length2":45},{"diffs":[[0,"est."],[-1,"ok(true"],[1,"equal(number++, 1"],[0,", 'did "],[1,"not "],[0,"run s"],[-1,"tart function nr 2"],[1,"econd"],[0,"');\r"]],"start1":957,"start2":957,"length1":45,"length2":46},{"diffs":[[0,"est."],[-1,"ok(true, 'did run start function nr 3"],[1,"equal(number++, 2, 'did not run third"],[0,"');\r"]],"start1":1127,"start2":1127,"length1":45,"length2":45}]],"length":1422,"saved":false}
{"ts":1358894141537,"patch":[[{"diffs":[[0,"      pipeline({"],[1,"count: 0});\r\n        pipeline({count: 1"],[0,"});\r\n    },\r\n   "]],"start1":657,"start2":657,"length1":32,"length2":71},{"diffs":[[0,"peline({"],[1,"count: 0});\r\n        pipeline({count: 1"],[0,"});\r\n   "]],"start1":1269,"start2":1269,"length1":16,"length2":55}]],"length":1500,"saved":false}
{"ts":1358894408428,"patch":[[{"diffs":[[0,"out("],[-1,"function() {\r\n                cb();\r\n            }"],[1,"cb"],[0,", 10"]],"start1":457,"start2":457,"length1":58,"length2":10},{"diffs":[[0,"pipeline({count:"],[1," 0, item:"],[0," 0});\r\n        p"]],"start1":615,"start2":615,"length1":32,"length2":41},{"diffs":[[0,"pipeline({count:"],[1," 0, item:"],[0," 1});\r\n    },\r\n "]],"start1":655,"start2":655,"length1":32,"length2":41},{"diffs":[[0,"out("],[-1,"function() {\r\n                cb();\r\n            }"],[1,"cb"],[0,", 10"]],"start1":1032,"start2":1032,"length1":58,"length2":10},{"diffs":[[0,"({count:"],[1," 0, item:"],[0," 0});\r\n "]],"start1":1197,"start2":1197,"length1":16,"length2":25},{"diffs":[[0,"({count:"],[1," 0, item: 1});\r\n    },\r\n    \r\n    'test pipe actions': function(test) {\r\n        test.expect(6);\r\n        var inum = 0;\r\n        \r\n        var pipeline = Pipeline().pipe(function(item) {\r\n            test.equal(inum++, item.item, 'was wrong item');\r\n            test.equal(item.count++, 0, 'did not run first');\r\n        }).pipeAsync(function(item, cb) {\r\n            test.equal(inum, item.item, 'was wrong item');\r\n            test.equal(item.count++, 1, 'did not run second');\r\n            setTimeout(cb, 10);\r\n        }).pipe(function(item) {\r\n            test.equal(inum, item.item, 'was wrong item');\r\n            test.equal(item.count++, 2, 'did not run third');\r\n        }).create();\r\n        pipeline({count: 0, item: 0});\r\n        pipeline({count: 0, item:"],[0," 1});\r\n "]],"start1":1237,"start2":1237,"length1":16,"length2":781}]],"length":2196,"saved":false}
{"ts":1358894418975,"patch":[[{"diffs":[[0,"ect("],[-1,"6"],[1,"12"],[0,");\r\n"]],"start1":1334,"start2":1334,"length1":9,"length2":10}]],"length":2197,"saved":false}
{"ts":1358894901939,"patch":[[{"diffs":[[0,"t run third');\r\n"],[1,"            \r\n            if(inum == 2) test.done();\r\n"],[0,"        }).creat"]],"start1":1900,"start2":1900,"length1":32,"length2":86}]],"length":2251,"saved":false}
{"ts":1358894981651,"patch":[[{"diffs":[[0,"ual(inum"],[-1,"++"],[0,", item.i"]],"start1":1453,"start2":1453,"length1":18,"length2":16},{"diffs":[[0," test.equal(inum"],[1,"++"],[0,", item.item, 'wa"]],"start1":1802,"start2":1802,"length1":32,"length2":34}]],"length":2251,"saved":false}
{"ts":1358895248514,"patch":[[{"diffs":[[0,"item: 1});\r\n"],[1,"    },\r\n    \r\n    'test once actions': function(test) {\r\n        test.expect(3);\r\n        var number = 0;\r\n        \r\n        var pipeline = Pipeline().pipeAsync(function(item, cb) {\r\n            setTimeout(cb, 30);\r\n            number++;\r\n        }).create();\r\n        \r\n        pipeline.once(function() {\r\n           test.equal(number++, 0, 'did not run first'); \r\n        });\r\n        setTimeout(function() {\r\n            pipeline({count: 0, item: 0});\r\n            pipeline({count: 0, item: 1});\r\n            pipeline.once(function() {\r\n                test.equal(number++, 1, 'did not run second'); \r\n            });\r\n            pipeline.once(function() {\r\n                test.equal(number++, 1, 'did not run third');\r\n                test.done();\r\n            });\r\n        }, 10);\r\n"],[0,"    }\r\n}; \r\n"]],"start1":2060,"start2":2060,"length1":24,"length2":813}]],"length":3040,"saved":false}
{"ts":1358895358049,"patch":[[{"diffs":[[0,"equal(number++, "],[-1,"1"],[1,"3"],[0,", 'did not run s"]],"start1":2633,"start2":2633,"length1":33,"length2":33},{"diffs":[[0,"equal(number++, "],[-1,"1"],[1,"4"],[0,", 'did not run t"]],"start1":2755,"start2":2755,"length1":33,"length2":33}]],"length":3040,"saved":false}
{"ts":1358895444109,"patch":[[{"diffs":[[0,"equal(number++, "],[-1,"0"],[1,"3"],[0,", 'did not run f"]],"start1":2395,"start2":2395,"length1":33,"length2":33}]],"length":3040,"saved":false}
{"ts":1358895506273,"patch":[[{"diffs":[[0,") {\r\n           "],[1,"test.ok(number++ == 0, number.toString());\r\n           //"],[0,"test.equal(numbe"]],"start1":2374,"start2":2374,"length1":32,"length2":89}]],"length":3097,"saved":false}
{"contributors":[],"silentsave":false,"ts":1358895635081,"patch":[[{"diffs":[[0,"\n           "],[1,"console.log('number is: ' + number);\r\n           //"],[0,"test.ok(numb"]],"start1":2378,"start2":2378,"length1":24,"length2":75},{"diffs":[[0,"\n           "],[-1,"//"],[0,"test.equal(n"]],"start1":2484,"start2":2484,"length1":26,"length2":24},{"diffs":[[0,"equal(number++, "],[-1,"3"],[1,"0"],[0,", 'did not run f"]],"start1":2501,"start2":2501,"length1":33,"length2":33}]],"length":3146,"saved":false}
{"ts":1358895682287,"patch":[[{"diffs":[[0,"est) {\r\n        "],[1,"//"],[0,"test.expect(3);\r"]],"start1":2121,"start2":2121,"length1":32,"length2":34},{"diffs":[[0,"est.expect(3);\r\n"],[-1,""],[0,"        var numb"]],"start1":2140,"start2":2140,"length1":32,"length2":32},{"diffs":[[0,"));\r\n           "],[1,"//"],[0,"test.equal(numbe"]],"start1":2482,"start2":2482,"length1":32,"length2":34},{"diffs":[[0,"                "],[1,"//"],[0,"test.equal(numbe"]],"start1":2722,"start2":2722,"length1":32,"length2":34},{"diffs":[[0,"e(function() {\r\n"],[-1,""],[0,"                "]],"start1":2830,"start2":2830,"length1":32,"length2":32},{"diffs":[[0,"                "],[1,"//"],[0,"test.equal(numbe"]],"start1":2846,"start2":2846,"length1":32,"length2":34}]],"length":3154,"saved":false}
{"ts":1358895722143,"patch":[[{"diffs":[[0,"ber++;\r\n"],[1,"            console.log('piped');\r\n"],[0,"        "]],"start1":2305,"start2":2305,"length1":16,"length2":51}]],"length":3189,"saved":false}
{"ts":1358895777779,"patch":[[{"diffs":[[0,"+;\r\n"],[-1,"            console.log('piped');\r\n"],[0,"    "]],"start1":2309,"start2":2309,"length1":43,"length2":8},{"diffs":[[0," {\r\n"],[-1,"           console.log('number is: ' + number);\r\n"],[0,"    "]],"start1":2377,"start2":2377,"length1":57,"length2":8},{"diffs":[[0,"));\r\n           "],[-1,"//"],[0,""],[1,""],[0,"test.equal(numbe"]],"start1":2433,"start2":2433,"length1":34,"length2":32}]],"length":3103,"saved":false}
{"ts":1358895791632,"patch":[[{"diffs":[[0,"                "],[-1,"//"],[0,"test.equal(numbe"]],"start1":2671,"start2":2671,"length1":34,"length2":32},{"diffs":[[0,"            "],[-1,"//"],[0,"test.equal(n"]],"start1":2797,"start2":2797,"length1":26,"length2":24}]],"length":3099,"saved":false}
{"ts":1358895799328,"patch":[[{"diffs":[[0," {\r\n        "],[-1,"//"],[0,"test.expect("]],"start1":2125,"start2":2125,"length1":26,"length2":24}]],"length":3097,"saved":false}
{"ts":1358896023366,"patch":[[{"diffs":[[0,"   }, 10);\r\n"],[1,"    },\r\n    \r\n    'test complex': function(test) {\r\n        test.expect(3);\r\n        var number = 0;\r\n        var inum = 0;\r\n        \r\n        var pipeline = Pipeline().start(function() {\r\n            test.equal(number++, 0, 'did not run first');\r\n        }).startAsync(function(cb) {\r\n            test.equal(number++, 1, 'did not run second');\r\n            setTimeout(cb, 10);\r\n        }).start(function() {\r\n           test.equal(number++, 2, 'did not run third');\r\n        }).pipe(function(item) {\r\n            test.equal(inum, item.item, 'was wrong item');\r\n            test.equal(item.count++, 0, 'did not run first');\r\n            number++;\r\n        }).pipeAsync(function(item, cb) {\r\n            test.equal(inum, item.item, 'was wrong item');\r\n            test.equal(item.count++, 1, 'did not run second');\r\n            setTimeout(cb, 10);\r\n        }).pipe(function(item) {\r\n            test.equal(inum++, item.item, 'was wrong item');\r\n            test.equal(item.count++, 2, 'did not run third');\r\n        }).stop(function() {\r\n            test.equal(number++, 5, 'did not run first');\r\n        }).stopAsync(function(cb) {\r\n            test.equal(number++, 6, 'did not run second');\r\n            setTimeout(cb, 10);\r\n        }).stop(function() {\r\n           test.equal(number++, 7, 'did not run third');\r\n        }).create();\r\n        pipeline({count: 0, item: 0});\r\n        pipeline({count: 0, item: 1});\r\n        pipeline.once(function() {\r\n           test.equal(number++, 8, 'did not run last');\r\n           test.done();\r\n        });\r\n"],[0,"    }\r\n}; \r\n"]],"start1":2906,"start2":2906,"length1":24,"length2":1571}]],"length":4644,"saved":false}
{"ts":1358896038773,"patch":[[{"diffs":[[0,"    test.expect("],[-1,"3"],[1,"19"],[0,");\r\n        var "]],"start1":2974,"start2":2974,"length1":33,"length2":34}]],"length":4645,"saved":false}
{"ts":1358896235718,"patch":[[{"diffs":[[0,"       });\r\n"],[1,"    },\r\n    \r\n    'test skipping': function(test) {\r\n        test.expect(1);\r\n        var number = 0;\r\n        \r\n        var pipeline = Pipeline().pipe(function() {\r\n            this.skip();\r\n            number++;\r\n        }).pipe(function() {\r\n            number++;\r\n        }).stop(function() {\r\n            test.equal(number, 1, 'did not skip');\r\n            test.done();\r\n        }).create();\r\n        \r\n        pipeline({count: 0, item: 0});\r\n"],[0,"    }\r\n}; \r\n"]],"start1":4454,"start2":4454,"length1":24,"length2":472}]],"length":5093,"saved":false}
{"ts":1358896308461,"patch":[[{"diffs":[[0,"item: 0});\r\n"],[1,"    },\r\n    \r\n    'test redo': function(test) {\r\n        test.expect(1);\r\n        var number = 0;\r\n        \r\n        var pipeline = Pipeline().pipe(function() {\r\n            if(number === 0) this.redo();\r\n            number++;\r\n        }).stop(function() {\r\n            test.equal(number, 1, 'did not skip');\r\n            test.done();\r\n        }).create();\r\n        \r\n        pipeline({count: 0, item: 0});\r\n"],[0,"    }\r\n}; \r\n"]],"start1":4902,"start2":4902,"length1":24,"length2":432}]],"length":5501,"saved":false}
{"ts":1358896481040,"patch":[[{"diffs":[[0,"is.skip();\r\n"],[1,"            this.skip(); // double to test that it still works\r\n"],[0,"            "]],"start1":4646,"start2":4646,"length1":24,"length2":88},{"diffs":[[0,"r === 0)"],[1," {"],[0," this.re"]],"start1":5160,"start2":5160,"length1":16,"length2":18},{"diffs":[[0,".redo();"],[1," this.redo(); } //double to test that it still works"],[0,"\r\n      "]],"start1":5175,"start2":5175,"length1":16,"length2":68}]],"length":5619,"saved":false}
{"ts":1358896497721,"patch":[[{"diffs":[[0,"t.equal(number, "],[-1,"1"],[1,"2"],[0,", 'did not skip'"]],"start1":5305,"start2":5305,"length1":33,"length2":33}]],"length":5619,"saved":false}
{"ts":1358897008128,"patch":[[{"diffs":[[0,"item: 0});\r\n"],[1,"    },\r\n    \r\n    'test backlog': function(test) {\r\n        test.expect(2);\r\n        \r\n        var pipeline = Pipeline().pipe(function(item) {\r\n            // do nothing\r\n        }).pipeAsync(function(item, cb) {\r\n            // do nothing\r\n            setTimeout(cb, 10);\r\n        }).pipe(function(item) {\r\n            // do nothing\r\n        }).create();\r\n        \r\n        test.equal(pipeline.backlog(), 0, 'not empty');\r\n        pipeline({count: 0, item: 0});\r\n        pipeline({count: 0, item: 1});\r\n        test.equal(pipeline.backlog(), 1, 'not containing 1 item');\r\n        test.done();\r\n"],[0,"    }\r\n}; \r\n"]],"start1":5428,"start2":5428,"length1":24,"length2":619}]],"length":6214,"saved":false}
{"ts":1358897073217,"patch":[[{"diffs":[[0,"cklog(),"],[1," 2, 'not containing 2 item');\r\n        setTimeout(function() {\r\n            test.equal(pipeline.backlog(),"],[0," 1, 'not"]],"start1":5974,"start2":5974,"length1":16,"length2":122},{"diffs":[[0,");\r\n        "],[1,"    "],[0,"test."],[-1,"done("],[1,"end();\r\n        }, 1"],[0,");\r\n    }\r\n}"]],"start1":6115,"start2":6115,"length1":34,"length2":53}]],"length":6339,"saved":false}
{"ts":1358897085013,"patch":[[{"diffs":[[0,"est."],[-1,"end"],[1,"done"],[0,"();\r"]],"start1":6132,"start2":6132,"length1":11,"length2":12}]],"length":6340,"saved":false}
{"ts":1358897096599,"patch":[[{"diffs":[[0,".expect("],[-1,"2"],[1,"3"],[0,");\r\n    "]],"start1":5504,"start2":5504,"length1":17,"length2":17}]],"length":6340,"saved":false}
